import * as webpack from 'ssr-webpack4';
const errorEmitPlugin = function (compiler) {
    compiler.hooks.done.tapAsync('done', function (stats, callback) {
        if (stats.compilation.errors.length > 0) {
            const isDev = process.env.NODE_ENV !== 'production';
            console.error(stats.compilation.errors);
            if (!isDev) {
                process.exit(1);
            }
        }
        callback();
    });
};
const webpackPromisify = async (config) => {
    var _a;
    (_a = config.plugins) === null || _a === void 0 ? void 0 : _a.push(errorEmitPlugin);
    return await new Promise((resolve, reject) => {
        webpack(config, (err, stats) => {
            if (err) {
                reject(err);
            }
            resolve(stats);
        });
    });
};
export { webpackPromisify };
//# sourceMappingURL=promisify.js.map