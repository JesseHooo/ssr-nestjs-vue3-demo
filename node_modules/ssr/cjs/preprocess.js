"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleEnv = void 0;
const fs_1 = require("fs");
const path_1 = require("path");
const handleEnv = async (argv) => {
    var _a, _b;
    const { loadConfig, getCwd } = await Promise.resolve().then(() => require('ssr-common-utils'));
    const { https, isDev } = loadConfig();
    const cwd = getCwd();
    process.env.BUILD_TOOL = argv.vite ? 'vite' : 'webpack';
    process.env.OPTIMIZE = (process.env.BUILD_TOOL === 'webpack' && argv.optimize) ? '1' : '0';
    if (argv.ssg) {
        process.env.SSG = '1';
    }
    if (isDev) {
        process.env.GENERATE_SOURCEMAP = 'source-map';
    }
    if (argv.sourcemap) {
        if ((_b = (_a = argv.sourcemap).includes) === null || _b === void 0 ? void 0 : _b.call(_a, 'source-map')) {
            process.env.GENERATE_SOURCEMAP = argv.sourcemap;
        }
        else if (!isDev) {
            process.env.GENERATE_SOURCEMAP = 'source-map';
        }
    }
    if (argv.analyze) {
        process.env.GENERATE_ANALYSIS = '1';
    }
    if (argv.html) {
        process.env.SPA = '1';
    }
    if (argv.legacy) {
        process.env.LEGACY_VITE = '1';
    }
    if (argv.nominify) {
        process.env.NOMINIFY = '1';
    }
    process.env.SERVER_PORT = argv.port ? String(argv.port) : '3000';
    if (argv.vite) {
        await fs_1.promises.writeFile((0, path_1.resolve)(cwd, './build/tag.json'), JSON.stringify({
            BUILD_TOOL: process.env.BUILD_TOOL
        }, null, 2));
    }
    if (!!https && isDev) {
        process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';
    }
};
exports.handleEnv = handleEnv;
//# sourceMappingURL=preprocess.js.map