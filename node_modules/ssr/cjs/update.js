"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.update = void 0;
const path_1 = require("path");
const axios_1 = require("axios");
const ssr_common_utils_1 = require("ssr-common-utils");
const update = async () => {
    const cwd = (0, ssr_common_utils_1.getCwd)();
    const { dependencies, devDependencies } = require((0, path_1.resolve)(cwd, './package.json'));
    const d = Object.assign({}, dependencies, devDependencies);
    const needCheck = Object.keys(d).filter(item => ssr_common_utils_1.ssrPackages.includes(item));
    const res = {};
    await (await Promise.all(needCheck.map(async (p) => await axios_1.default.get(`https://registry.npmjs.org/${p}`)))).forEach(item => {
        const currentVersion = require((0, path_1.resolve)(cwd, `./node_modules/${item.data.name}/package.json`)).version;
        const lastestVersion = item.data['dist-tags'].latest;
        if (lastestVersion !== currentVersion) {
            res[item.data.name] = {
                currentVersion,
                lastestVersion
            };
        }
    });
    if (Object.keys(res).length === 0) {
        (0, ssr_common_utils_1.logGreen)('All ssr dpendencies is latest!');
    }
    else {
        Object.entries(res).forEach(([key, value]) => {
            (0, ssr_common_utils_1.logGreen)(`${key} current version is ${value.currentVersion} latest version is ${value.lastestVersion}`);
        });
    }
};
exports.update = update;
//# sourceMappingURL=update.js.map