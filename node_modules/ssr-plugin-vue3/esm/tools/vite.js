var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16;
import { build } from 'vite';
import { loadConfig, chunkNamePlugin, rollupOutputOptions, manifestPlugin, commonConfig, asyncOptimizeChunkPlugin, getOutputPublicPath, getBabelOptions, getDefineEnv } from 'ssr-common-utils';
import vuePlugin from '@vitejs/plugin-vue';
import vueJSXPlugin from '@vitejs/plugin-vue-jsx';
import babel from '@rollup/plugin-babel';
import { createStyleImportPlugin, AndDesignVueResolve, VantResolve, ElementPlusResolve, NutuiResolve, AntdResolve } from 'ssr-vite-plugin-style-import';
const { getOutput, vue3ServerEntry, vue3ClientEntry, viteConfig, supportOptinalChaining, isDev, define, optimize } = loadConfig();
const { clientOutPut, serverOutPut } = getOutput();
const styleImportConfig = {
    include: ['**/*.vue', '**/*.ts', '**/*.js', '**/*.tsx', '**/*.jsx', /chunkName/],
    resolves: [
        AndDesignVueResolve(),
        VantResolve(),
        ElementPlusResolve(),
        NutuiResolve(),
        AntdResolve()
    ]
};
const serverPlugins = [
    vuePlugin((_b = (_a = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _a === void 0 ? void 0 : _a.server) === null || _b === void 0 ? void 0 : _b.defaultPluginOptions),
    vueJSXPlugin(),
    (_d = (_c = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _c === void 0 ? void 0 : _c.common) === null || _d === void 0 ? void 0 : _d.extraPlugin,
    (_f = (_e = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _e === void 0 ? void 0 : _e.server) === null || _f === void 0 ? void 0 : _f.extraPlugin,
    createStyleImportPlugin(styleImportConfig),
    !supportOptinalChaining && babel({
        babelHelpers: 'bundled',
        plugins: [
            '@babel/plugin-proposal-optional-chaining',
            '@babel/plugin-proposal-nullish-coalescing-operator'
        ],
        exclude: /node_modules|\.(css|less|sass)/,
        extensions: ['.vue', '.ts', '.tsx', '.js']
    })
].filter(Boolean);
const serverConfig = {
    ...commonConfig(),
    ...(_g = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().server) === null || _g === void 0 ? void 0 : _g.otherConfig,
    plugins: (_l = (_k = (_j = (_h = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _h === void 0 ? void 0 : _h.server) === null || _j === void 0 ? void 0 : _j.processPlugin) === null || _k === void 0 ? void 0 : _k.call(_j, serverPlugins)) !== null && _l !== void 0 ? _l : serverPlugins,
    optimizeDeps: {
        ...(_o = (_m = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().server) === null || _m === void 0 ? void 0 : _m.otherConfig) === null || _o === void 0 ? void 0 : _o.optimizeDeps,
        esbuildOptions: {
            ...(_r = (_q = (_p = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().server) === null || _p === void 0 ? void 0 : _p.otherConfig) === null || _q === void 0 ? void 0 : _q.optimizeDeps) === null || _r === void 0 ? void 0 : _r.esbuildOptions,
            // @ts-expect-error
            bundle: isDev
        }
    },
    build: {
        minify: !process.env.NOMINIFY,
        ...(_t = (_s = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().server) === null || _s === void 0 ? void 0 : _s.otherConfig) === null || _t === void 0 ? void 0 : _t.build,
        ssr: vue3ServerEntry,
        outDir: serverOutPut,
        rollupOptions: {
            ...(_w = (_v = (_u = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().server) === null || _u === void 0 ? void 0 : _u.otherConfig) === null || _v === void 0 ? void 0 : _v.build) === null || _w === void 0 ? void 0 : _w.rollupOptions,
            input: isDev ? vue3ClientEntry : vue3ServerEntry,
            output: {
                entryFileNames: 'Page.server.js',
                assetFileNames: rollupOutputOptions().assetFileNames
            }
        }
    },
    define: {
        ...getDefineEnv(),
        ...(_y = (_x = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().server) === null || _x === void 0 ? void 0 : _x.otherConfig) === null || _y === void 0 ? void 0 : _y.define,
        __isBrowser__: false,
        ...define === null || define === void 0 ? void 0 : define.base,
        ...define === null || define === void 0 ? void 0 : define.server
    }
};
const clientPlugins = [
    vuePlugin((_0 = (_z = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _z === void 0 ? void 0 : _z.client) === null || _0 === void 0 ? void 0 : _0.defaultPluginOptions),
    vueJSXPlugin(),
    (_2 = (_1 = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _1 === void 0 ? void 0 : _1.common) === null || _2 === void 0 ? void 0 : _2.extraPlugin,
    (_4 = (_3 = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _3 === void 0 ? void 0 : _3.client) === null || _4 === void 0 ? void 0 : _4.extraPlugin,
    createStyleImportPlugin(styleImportConfig)
].filter(Boolean);
const clientConfig = {
    ...commonConfig(),
    ...(_5 = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().client) === null || _5 === void 0 ? void 0 : _5.otherConfig,
    base: isDev ? '/' : getOutputPublicPath(),
    plugins: (_9 = (_8 = (_7 = (_6 = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig()) === null || _6 === void 0 ? void 0 : _6.client) === null || _7 === void 0 ? void 0 : _7.processPlugin) === null || _8 === void 0 ? void 0 : _8.call(_7, clientPlugins)) !== null && _9 !== void 0 ? _9 : clientPlugins,
    build: {
        minify: !process.env.NOMINIFY,
        ...(_11 = (_10 = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().client) === null || _10 === void 0 ? void 0 : _10.otherConfig) === null || _11 === void 0 ? void 0 : _11.build,
        ...(optimize ? { write: false } : {}),
        ssrManifest: true,
        outDir: clientOutPut,
        rollupOptions: {
            ...(_14 = (_13 = (_12 = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().client) === null || _12 === void 0 ? void 0 : _12.otherConfig) === null || _13 === void 0 ? void 0 : _13.build) === null || _14 === void 0 ? void 0 : _14.rollupOptions,
            input: vue3ClientEntry,
            output: rollupOutputOptions(),
            plugins: [chunkNamePlugin(), asyncOptimizeChunkPlugin(), manifestPlugin(),
                ...getBabelOptions({
                    babel
                })]
        }
    },
    define: {
        ...getDefineEnv(),
        ...(_16 = (_15 = viteConfig === null || viteConfig === void 0 ? void 0 : viteConfig().client) === null || _15 === void 0 ? void 0 : _15.otherConfig) === null || _16 === void 0 ? void 0 : _16.define,
        __isBrowser__: true,
        ...define === null || define === void 0 ? void 0 : define.base,
        ...define === null || define === void 0 ? void 0 : define.client
    }
};
const viteStart = async () => {
    //
};
const viteBuild = async () => {
    await build({ ...clientConfig, mode: 'production' });
    await build({ ...serverConfig, mode: 'production' });
};
const viteBuildClient = async () => {
    await build({ ...clientConfig, mode: 'production' }).catch(_ => { });
};
const viteBuildServer = async () => {
    await build({ ...serverConfig, mode: 'production' });
};
export { viteBuild, viteStart, viteBuildClient, viteBuildServer, serverConfig, clientConfig };
//# sourceMappingURL=vite.js.map