import { h } from 'vue';
import { createRouter as create, createWebHistory, createMemoryHistory, createWebHashHistory } from 'vue-router';
import { createStore as createVuexStore } from 'vuex';
import { deepClone } from 'ssr-deepclone';
import { Routes } from './combine-router';
const { store, FeRoutes } = Routes;
function createRouter(options = {}) {
    var _a;
    const base = (_a = options.base) !== null && _a !== void 0 ? _a : '/';
    const { hashRouter } = options;
    return create({
        history: __isBrowser__ ? (hashRouter ? createWebHashHistory(base) : createWebHistory(base)) : createMemoryHistory(),
        routes: FeRoutes
    });
}
function createStore() {
    return createVuexStore(deepClone(store));
}
export const getInlineCssVNode = (arr) => arr.map(item => h('style', {
    innerHTML: item
}));
export const getVNode = (arr) => arr.map(item => {
    var _a;
    return h((_a = item.tagName) !== null && _a !== void 0 ? _a : 'script', Object.assign({}, item.describe, {
        innerHTML: item.content
    }));
});
export { createRouter, createStore };
//# sourceMappingURL=create.js.map