"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.start = void 0;
const path_1 = require("path");
const shelljs_1 = require("shelljs");
const ssr_common_utils_1 = require("ssr-common-utils");
const utils_1 = require("./utils");
const morethan = (0, utils_1.morethan10)();
const spinner = require('ora')('starting ');
const singleDash = ['c', 'p', 'w', 'd', 'e', 'h'].concat(morethan ? 'b' : '');
const doubleDash = ['config', 'path', 'watch', 'watchAssets', 'debug', 'webpack',
    'webpackPath', 'tsc', 'exec', 'preserveWatchOutput', 'help'].concat(morethan ? 'builder' : '');
const start = async (argv) => {
    const cwd = (0, ssr_common_utils_1.getCwd)();
    const { serverPort, nestStartTips } = (0, ssr_common_utils_1.loadConfig)();
    spinner.start();
    if (morethan) {
        argv.b = argv.b || 'swc';
    } // use swc as default compiler when nestjs >=10
    const normalizeArgv = (0, utils_1.getNormalizeArgv)(argv, {
        singleDash,
        doubleDash
    });
    const { stdout, stderr } = (0, shelljs_1.exec)(`${(0, path_1.resolve)(cwd, './node_modules/.bin/nest')} start --watch ${normalizeArgv}`, { async: true, silent: true, env: { ...process.env, FORCE_COLOR: '1' } });
    stdout === null || stdout === void 0 ? void 0 : stdout.on('data', function (data) {
        console.log(data);
        if (data.match('Nest application successfully started')) {
            spinner.stop();
            const https = process.env.HTTPS;
            (0, ssr_common_utils_1.logGreen)(nestStartTips !== null && nestStartTips !== void 0 ? nestStartTips : `Server is listening on ${https ? 'https' : 'http'}://127.0.0.1:${serverPort}`);
        }
    });
    stderr === null || stderr === void 0 ? void 0 : stderr.on('data', function (data) {
        if (!data.includes('DeprecationWarning') &&
            !data.includes('has been deprecated') &&
            !data.includes('reflect-metadata doesn\'t appear to be written in CJS')) {
            console.error(`error: ${data}`);
        }
    });
};
exports.start = start;
//# sourceMappingURL=start.js.map